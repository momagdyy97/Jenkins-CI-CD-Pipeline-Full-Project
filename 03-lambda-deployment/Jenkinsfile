pipeline {
    agent any

    environment {
        PATH = "/usr/bin:/usr/local/bin:/var/lib/jenkins/.local/bin:${env.PATH}"
    }

    stages {
        stage('Setup') {
            steps {
                sh '''
                    echo "🧰 Checking and Installing Python3 and pip3 if needed..."

                    # Wait for apt lock release if needed
                    while sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
                        echo "⏳ Waiting for other apt process to finish..."
                        sleep 5
                    done

                    if ! command -v python3 &> /dev/null; then
                        echo "📦 Installing python3..."
                        sudo apt update && sudo apt install -y python3
                    fi

                    if ! command -v pip3 &> /dev/null; then
                        echo "📦 Installing pip3..."
                        sudo apt update && sudo apt install -y python3-pip
                    fi

                    echo "📦 Installing Python test dependencies..."
                    pip3 install --user -r 03-lambda-deployment/lambda-app/tests/requirements.txt
                '''
            }
        }

        stage('Test') {
            steps {
                sh '''
                    echo "🧪 Running unit tests..."
                    pytest 03-lambda-deployment/lambda-app/tests
                '''
            }
        }

        stage('Build') {
            steps {
                sh '''
                    echo "🏗️ Building Lambda app with AWS SAM..."
                    sam build -t 03-lambda-deployment/lambda-app/template.yaml
                '''
            }
        }

        stage('Deploy') {
            environment {
                AWS_ACCESS_KEY_ID     = credentials('aws-access-key')
                AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')
            }
            steps {
                sh '''
                    echo "🚀 Deploying to AWS Lambda..."
                    sam deploy -t 03-lambda-deployment/lambda-app/template.yaml \
                        --no-confirm-changeset \
                        --no-fail-on-empty-changeset
                '''
            }
        }
    }
}
